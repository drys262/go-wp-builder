#
# User-defined substitutions:
#   _CLOUDSDK_COMPUTE_ZONE
#   _CLOUDSDK_CONTAINER_CLUSTER
#   _GITHUB_USERNAME
#   _KMS_KEY 
#   _KMS_KEYRING
#

steps:
  # Build the helloworld container image.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'asia.gcr.io/${PROJECT_ID}/wp1:${SHORT_SHA}'
      - '.'

  # Generate a kubeconfig file for the given GKE cluster.
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)
      
        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"
    volumes:
      - name: 'kube'
        path: /kube


  - name: 'gcr.io/hightowerlabs/hub'
    entrypoint: 'sh'
    env:
      - 'GITHUB_USERNAME=${_GITHUB_USERNAME}'
      - 'GITHUB_PASSWORD=${_GITHUB_PASSWORD}'
    args:
      - '-c'
      - |
        hub config --global user.email "koeichavez17@gmail.com"
        hub config --global user.name "Google Container Builder"

        # git clone "https://github.com/${_GITHUB_USERNAME}/wpbuilder-infrastructure-staging.git"
        # hub clone "https://github.com/drys262/wpbuilder-infrastructure-staging"
        hub clone "${_GITHUB_USERNAME}/wpbuilder-infrastructure-staging"


        cd wpbuilder-infrastructure-staging

        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: gohello
                  image: asia.gcr.io/${PROJECT_ID}/wp1:${SHORT_SHA}
        EOF


        kubectl patch --local -o yaml \
          -f kubernetes/deployments/gohello.yaml \
          -p "$(cat patch.yaml)" \
          > gohello.yaml

        mv gohello.yaml kubernetes/deployments/gohello.yaml

        hub add kubernetes/deployments/gohello.yaml


        hub commit -F- <<EOF
        Update the gohello application

        This commit updates the gohello deployment container image to:

            asia.gcr.io/${PROJECT_ID}/wp1:${SHORT_SHA}.

        Build ID: ${BUILD_ID}
        EOF


        echo "BEFORE PUSH HERE"
        echo "BEFORE PUSH HERE"
        hub push origin master


    volumes:
      - name: 'kube'
        path: /kube

images:
  - 'asia.gcr.io/${PROJECT_ID}/gohello:${SHORT_SHA}'

  # Clone the helloworld-infrastructure-staging repo.
  # - name: 'gcr.io/hightowerlabs/hub'
  #   env:
  #     - 'HUB_CONFIG=/config/hub'
  #     - 'KUBECONFIG=/kube/config'
  #   entrypoint: 'sh'
  #   args:
  #     - '-c'
  #     - |
  #       ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")

  #       hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper 
  #       hub config --global hub.protocol https
  #       hub config --global user.email "$${ACTIVE_ACCOUNT}"
  #       hub config --global user.name "Google Container Builder"

  #       hub clone "${_GITHUB_USERNAME}/helloworld-infrastructure-staging"

  #       cd helloworld-infrastructure-staging

  #       cat <<EOF > patch.yaml
  #       spec:
  #         template:
  #           spec:
  #             containers:
  #               - name: helloworld
  #                 image: gcr.io/${PROJECT_ID}/helloworld:${COMMIT_SHA}
  #       EOF

  #       kubectl patch --local -o yaml \
  #         -f kubernetes/deployments/helloworld.yaml \
  #         -p "$(cat patch.yaml)" \
  #         > helloworld.yaml

  #       mv helloworld.yaml kubernetes/deployments/helloworld.yaml

  #       hub add kubernetes/deployments/helloworld.yaml
              
  #       hub commit -F- <<EOF
  #       Update the helloworld application

  #       This commit updates the helloworld deployment container image to:

  #           gcr.io/${PROJECT_ID}/helloworld:${COMMIT_SHA}.

  #       Build ID: ${BUILD_ID}
  #       EOF

  #       hub push origin master
  #   volumes:
  #     - name: 'config'
  #       path: /config
  #     - name: 'kube'
  #       path: /kube

# images:
#   - 'gcr.io/${PROJECT_ID}/helloworld:${COMMIT_SHA}'

